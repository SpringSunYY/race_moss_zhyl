<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moss.zhyl.mapper.AddressInfoMapper">
    
    <resultMap type="AddressInfo" id="AddressInfoResult">
        <result property="addressId"    column="address_id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="code"    column="code"    />
        <result property="name"    column="name"    />
        <result property="level"    column="level"    />
        <result property="center"    column="center"    />
        <result property="remark"    column="remark"    />
        <result property="orderNum"    column="order_num"    />
        <result property="ancestors"    column="ancestors"    />
    </resultMap>

    <sql id="selectAddressInfoVo">
        select address_id, parent_id, code, name, level, center, remark, order_num, ancestors from yl_address_info
    </sql>

    <select id="selectAddressInfoList" parameterType="AddressInfo" resultMap="AddressInfoResult">
        <include refid="selectAddressInfoVo"/>
        <where>  
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="code != null  and code != ''"> and code = #{code}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="level != null  and level != ''"> and level = #{level}</if>
            <if test="center != null  and center != ''"> and center = #{center}</if>
            <if test="orderNum != null "> and order_num = #{orderNum}</if>
        </where>
    </select>
    
    <select id="selectAddressInfoByAddressId" parameterType="Long" resultMap="AddressInfoResult">
        <include refid="selectAddressInfoVo"/>
        where address_id = #{addressId}
    </select>

    <insert id="insertAddressInfo" parameterType="AddressInfo">
        insert into yl_address_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="addressId != null">address_id,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="code != null and code != ''">code,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="level != null and level != ''">level,</if>
            <if test="center != null">center,</if>
            <if test="remark != null">remark,</if>
            <if test="orderNum != null">order_num,</if>
            <if test="ancestors != null">ancestors,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="addressId != null">#{addressId},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="code != null and code != ''">#{code},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="level != null and level != ''">#{level},</if>
            <if test="center != null">#{center},</if>
            <if test="remark != null">#{remark},</if>
            <if test="orderNum != null">#{orderNum},</if>
            <if test="ancestors != null">#{ancestors},</if>
         </trim>
    </insert>

    <update id="updateAddressInfo" parameterType="AddressInfo">
        update yl_address_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="code != null and code != ''">code = #{code},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="level != null and level != ''">level = #{level},</if>
            <if test="center != null">center = #{center},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="ancestors != null">ancestors = #{ancestors},</if>
        </trim>
        where address_id = #{addressId}
    </update>

    <delete id="deleteAddressInfoByAddressId" parameterType="Long">
        delete from yl_address_info where address_id = #{addressId}
    </delete>

    <delete id="deleteAddressInfoByAddressIds" parameterType="String">
        delete from yl_address_info where address_id in 
        <foreach item="addressId" collection="array" open="(" separator="," close=")">
            #{addressId}
        </foreach>
    </delete>
</mapper>